
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* head, int k) {
        int count = 0;
        ListNode* curr = head;
        while(curr){ //Step-1
            count++;
            curr = curr -> next;
        }

        int node = count/k, extraNode = count%k; //step-2
        ListNode* prev = NULL;
        curr = head;
        vector<ListNode*> ans(k, NULL);
        int i = 0;
        while( i < k && curr){ // step-3
            ans[i] = curr;
            int actualNodeSize = node;
            if(extraNode > 0){
                actualNodeSize++;
                extraNode--;
            }

            while(actualNodeSize--){
                prev = curr;
                curr = curr -> next;
            }
            prev->next = NULL; // step-4
            i++;
        }
        return ans;
    }
};

/*
Step-1: Count number of nodes

Step-2: find the node and extra node

Step-3: iterate the k times and each time find the actual size 

step-4: make prev->next = NULL;

*/
