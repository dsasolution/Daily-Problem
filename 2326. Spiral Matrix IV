
class Solution {
public:
    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) {
        vector<vector<int>> ans(m, vector<int>(n, -1)); //step-1

        int sr = 0, er = m - 1;
        int sc = 0, ec = n - 1;

        while(sr <= er && sc <= ec && head){
            for(int i = sc; i <= ec; i++){
                ans[sr][i] = head->val;
                head = head -> next;
                if(head==NULL) return ans;
            }
            sr++;

            for(int i = sr; i <= er; i++){
                ans[i][ec] = head->val;
                head = head -> next;
                if(head==NULL) return ans;
            }
            ec--;

            for(int i = ec; i >= sc; i--){
                ans[er][i] = head -> val;
                head = head -> next;
                if(head==NULL) return ans;
            }
            er--;

            for(int i = er; i >= sr; i--){
                ans[i][sc] = head -> val;
                head = head -> next;
                if(head==NULL) return ans;
            }
            sc++;
        }
        return ans;
    }
};

/*
Step-1: Create a 2D Array using m rows and n colums & initialize -1

Step-2: iterate the likedlist using while loop
with start row , end row, start column and end column
     sr           er       sc               ec

     for(sc to ec) -> sr++

     for(sr to er) -> ec--;

     for(ec to sc) -> er--;

     for(er to sr) -> sc++;

step-3 : Check the list is NUll return answer;
*/
