class Solution {
public:
    int n;
    bool isPalindrome(string &s, int left, int right){
        while(left < right){
            if(s[left] != s[right])
            return false;
            left++;
            right--;
        }
        return true;
    }
    void helper(string &s, int ind, vector<string> &curr, vector<vector<string>> &ans){
        if(ind==n){
            ans.push_back(curr);
            return;
        }

        for(int i = ind; i < n; i++){
            if(isPalindrome(s, ind, i)){
                curr.push_back(s.substr(ind, i - ind + 1));
                helper(s, i+1, curr, ans);
                curr.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        n = s.size();
        vector<vector<string>> ans;
        vector<string> curr;
        helper(s, 0, curr, ans);
        return ans;
    }
};
