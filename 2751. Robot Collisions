class Solution {
public:
    vector<int> survivedRobotsHealths(vector<int>& positions, vector<int>& healths, string directions) {
        int n = positions.size();
        vector<int> ans;
        stack<int> st;
        vector<pair<int, int>> v;
        for(int i = 0; i < n; i++){
            v.push_back({positions[i], i});
        }

        sort(begin(v), end(v));

        for(int i = 0; i < n; i++){
            int ind = v[i].second;
            if(directions[ind]=='L'){
                if(st.empty()){
                    ans.push_back(ind);
                    continue;
                }
                while(!st.empty() && healths[st.top()] < healths[ind]){
                    healths[ind]--;
                    st.pop();
                }
                if(st.empty()){
                    ans.push_back(ind);
                }else{
                    if(healths[st.top()]==healths[ind]){
                        st.pop();
                    }else{
                        healths[st.top()]--;
                        if(healths[st.top()]==0) st.pop();
                    }
                }
            }else st.push(ind);
        }

        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }

        sort(begin(ans), end(ans));

        for(int i = 0; i < ans.size(); i++){
            ans[i] = healths[ans[i]];
        }
        return ans;
    }
};

/*
healths = [2,17,9,15,10], 
directions = "RRRRR"
positions = [5,4,3,2,1]
            5-> , 4 ->, 3-> , 2 -> , 1-> all robots in same direction
            => No collision occurs


Example-2
healths = [10,10,15,12], 
directions = "RLRL"
positions = [3,5,2,6], 
             3->, <-5, 2-> ,<-6 
             2->, <-6
        healt-12, health - 15
        collision occurs and rdeuce by one of robot 6
        15 - 1 = 14  

*/
